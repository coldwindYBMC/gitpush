<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>Archetype Created Web Application</display-name>
  <!--web.xml文件是用来配置：欢迎页、servlet、filter等的 ，一个web项目是可以没有这个配置文件的 -->
  
  <context-param> <!--全局范围内环境参数初始化-->
    <param-name>contextConfigLocation</param-name><!--参数名称-->  
    <param-value>classpath*:applicationContext*.xml</param-value> <!--参数取值-->  
  </context-param>
   <!--以下配置的加载顺序:先 ServletContext >> context-param >> listener >> filter >> servlet >>  spring-->  
   
  <!-- 监听器配置 --> 
   <!--例:spring监听器-->  
  <listener><!--用来设定Listener接口-->  
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class><!--定义Listener的类名称-->
  </listener>
  <listener>       
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class> 
  </listener>
  
   <!-- 过滤器配置 --> 
  <!--例:编码过滤器-->  
  <filter> <!-- 用来声明filter的相关设定,过滤器可以截取和修改一个Servlet或JSP页面的请求或从一个Servlet或JSP页面发出的响应-->
    <filter-name>CharacterEncodingFilter</filter-name><!-- 起一个名字 -->
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class><!--  -->
    <init-param><!--用来定义参数,若在Servlet可以使用下列方法来获得:String param_name=getServletContext().getInitParamter("param-name里面的值");-->  
      <param-name>encoding</param-name><!--参数名字  -->
      <param-value>UTF-8</param-value><!-- 参数值 -->
    </init-param> 
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  
  <filter-mapping><!--用来定义filter所对应的URL-->  
    <filter-name>CharacterEncodingFilter</filter-name> <!--指定对应filter的名字--> 
    <url-pattern>/*</url-pattern><!--指定filter所对应的URL--> 
  </filter-mapping>
  
  <!-- servlet配置 -->
  <servlet><!--用来声明一个servlet的数据 -->    
    <servlet-name>springmvc</servlet-name><!--指定servlet的名称--> 
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class><!--指定servlet的类名称,这里配置了前端控制器-->  
    <load-on-startup>1</load-on-startup><!--当值为正数或零时：Servlet容器先加载数值小的servlet，再依次加载其他数值大的servlet.-->  
    
  </servlet>
  <servlet-mapping><!--用来定义servlet所对应的URL-->  
    <servlet-name>springmvc</servlet-name><!--用来定义servlet所对应的URL-->  
   <!--  <url-pattern>*.do</url-pattern> -->
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  
  <!-- 指定欢迎页面，如果第一个存在，就显示第一个，后面的不起作用。类推-->
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>index1.jsp</welcome-file>
  </welcome-file-list>
</web-app>